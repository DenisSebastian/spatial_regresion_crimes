[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Crimes",
    "section": "",
    "text": "Este documento tienen como objetivo in registrando los avances en la preparación de paper"
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "2  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever."
  },
  {
    "objectID": "marco_teorico.html",
    "href": "marco_teorico.html",
    "title": "3  Marco Teórico",
    "section": "",
    "text": "En desarrollo"
  },
  {
    "objectID": "cvm_ppp.html",
    "href": "cvm_ppp.html",
    "title": "4  CVM ppp",
    "section": "",
    "text": "source(\"scripts/recursos.R\")\nsource(\"scripts/funciones.R\")\n\n\n\n\n\n## geographic projections\ncrs_latlon <- \"+proj=longlat +datum=WGS84 +no_defs\"\ncrs_utm <- \n  \"+proj=utm +zone=19 +south +datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0\"\n\n\n\n\n\n# List of crimes/delitos and cities/ciudades\ncrimes = c(\n  \"Minor property offenses\",\n  \"Robberies\",\n  \"Burglaries\",\n  \"Drunkennes, damages and disorders\",\n  \"Family violence and aggression\",\n  \"Injuries, drugs and weapons\",\n  \"High violence and murder\"\n)\ndelitos = c(\"hurto\", \"robo\", \"asalto\", \"amen\", \"abus\", \"crim\", \"viol\")\n\n#ciudad de ejemplo\ncities <- c(\"Coquimbo-Serena\")\nciudades <- c(\"urb_4_18\")\nobs <- 1\ndelito <- delitos[1]\n\n\n\n\n\nPara el caso del presente ejemplo práctico se utiizará la ciudad de Coquimbo-Serena.\n\ncity <- ciudades[obs]\ncityp <- readRDS(paste0(\"data/\",city,\".rds\"))\ncityp <- spTransform(cityp, CRS(crs_utm))\n\nEl objeto espacial cityp cuyos puntos corresponde donde ha ucurrido eventos deictuales, cuyo formato SpatialPointDataFrame.\n\nMatriz de vecindad espacial: Se utilizó la función propia spatial_weights() @(sec-spatial-weights)\n\n# matriz de vecindad espacial\nnb <- spatial_weights(city_df = cityp, nvec= 12)\n\n\n\n\n\nCrea un objeto de clase “ppp” que representa un conjunto de datos de patrones de puntos en el plano bidimensional. Por lo anterior, se debe crear una ventana de observación w.\n\n#make windows\n  ext <- raster::extent(cityp)\n  x_min <- ext[1] + 100\n  x_max <- ext[2] - 100\n  y_min <- ext[3] + 100\n  y_max <- ext[4] - 100\n  w <- as.owin(c(x_min,x_max, y_min, y_max))\n\n\n\n\n\nSe utilizó funciónes de transformacion general mencionadas en Section 6.2 que corresponden a las siguientes:\n\nTransformación Cúbica\nTransformación Logarítmica\nCáculo del Lag Espacial\n\n\ncityp <- cityp %>%\n    st_as_sf(crs = 4326) %>% \n    mutate(across(.cols = all_of(delitos),\n                  .fns = t_cub, .names = \"cub{.col}\")) %>% \n    mutate(across(.cols = all_of(delitos),\n                  .fns = t_log1p, .names = \"log{.col}\")) %>% \n    mutate(across(.cols = all_of(delitos),\n                  .fns = lag_spatial, nb, .names = \"lag{.col}\")) %>%\n    as(\"Spatial\")\n\n\n\n\n\n \n  \n    zona \n    id \n    x \n    y \n    pflot \n    viol \n    crim \n    abus \n    amen \n    robo \n    hurto \n    asalto \n    denspob \n    educ \n    tamhog \n    constr \n    ofcom \n    vulzon \n    mobil \n    lpflot \n    neduc \n    ldenspob \n    lofcom \n    lconstr \n    cubhurto \n    cubrobo \n    cubasalto \n    cubamen \n    cubabus \n    cubcrim \n    cubviol \n    loghurto \n    logrobo \n    logasalto \n    logamen \n    logabus \n    logcrim \n    logviol \n    laghurto \n    lagrobo \n    lagasalto \n    lagamen \n    lagabus \n    lagcrim \n    lagviol \n  \n \n\n  \n    4101161005 \n    22 \n    -71.239 \n    -29.862 \n    1.000 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    144.756 \n    10.867 \n    3.170 \n    4328.618 \n    0.000 \n    0.367 \n    0.079 \n    0.178 \n    0.477 \n    0.767 \n    0.000 \n    0.840 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0.000 \n    0.000 \n    0.000 \n    0 \n    0 \n    0.083 \n    0.083 \n    0.083 \n    0.417 \n    0.250 \n    0.083 \n    0 \n  \n  \n    4101161005 \n    32 \n    -71.243 \n    -29.863 \n    1.000 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    227.772 \n    10.716 \n    3.393 \n    3830.009 \n    0.000 \n    0.367 \n    0.079 \n    0.178 \n    0.466 \n    0.846 \n    0.000 \n    0.829 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0.000 \n    0.000 \n    0.000 \n    0 \n    0 \n    0.000 \n    0.083 \n    0.083 \n    0.917 \n    0.583 \n    0.083 \n    0 \n  \n  \n    4101161005 \n    35 \n    -71.240 \n    -29.863 \n    1.034 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    1 \n    171.133 \n    11.801 \n    3.172 \n    4328.618 \n    0.000 \n    0.367 \n    0.079 \n    0.182 \n    0.550 \n    0.796 \n    0.000 \n    0.840 \n    0 \n    0 \n    1 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0.693 \n    0.000 \n    0.000 \n    0 \n    0 \n    0.000 \n    0.083 \n    0.000 \n    0.500 \n    0.250 \n    0.083 \n    0 \n  \n  \n    4101161005 \n    36 \n    -71.239 \n    -29.863 \n    1.000 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    154.603 \n    10.870 \n    3.135 \n    4328.618 \n    0.000 \n    0.367 \n    0.079 \n    0.178 \n    0.478 \n    0.779 \n    0.000 \n    0.840 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0.000 \n    0.000 \n    0.000 \n    0 \n    0 \n    0.083 \n    0.083 \n    0.083 \n    0.417 \n    0.250 \n    0.083 \n    0 \n  \n  \n    4101161005 \n    37 \n    -71.238 \n    -29.863 \n    1.025 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    155.145 \n    10.858 \n    3.148 \n    3230.309 \n    0.000 \n    0.367 \n    0.079 \n    0.181 \n    0.477 \n    0.779 \n    0.000 \n    0.815 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0.000 \n    0.000 \n    0.000 \n    0 \n    0 \n    0.083 \n    0.083 \n    0.083 \n    0.000 \n    0.250 \n    0.083 \n    0 \n  \n  \n    4101161001 \n    48 \n    -71.244 \n    -29.864 \n    1.125 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    168.179 \n    11.958 \n    3.336 \n    2384.222 \n    14.682 \n    0.292 \n    0.122 \n    0.193 \n    0.562 \n    0.793 \n    0.574 \n    0.788 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0.000 \n    0.000 \n    0.000 \n    0 \n    0 \n    0.000 \n    0.000 \n    0.250 \n    0.500 \n    0.417 \n    0.083 \n    0 \n  \n  \n    4101161005 \n    49 \n    -71.243 \n    -29.864 \n    1.071 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    212.743 \n    10.978 \n    3.415 \n    3795.759 \n    0.000 \n    0.367 \n    0.079 \n    0.187 \n    0.486 \n    0.834 \n    0.000 \n    0.828 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0.000 \n    0.000 \n    0.000 \n    0 \n    0 \n    0.000 \n    0.083 \n    0.250 \n    0.917 \n    0.583 \n    0.083 \n    0 \n  \n  \n    4101161005 \n    50 \n    -71.242 \n    -29.864 \n    1.000 \n    0 \n    0 \n    1 \n    1 \n    0 \n    0 \n    0 \n    220.188 \n    10.705 \n    3.409 \n    4026.613 \n    0.000 \n    0.367 \n    0.079 \n    0.178 \n    0.465 \n    0.840 \n    0.000 \n    0.834 \n    0 \n    0 \n    0 \n    1 \n    1 \n    0 \n    0 \n    0 \n    0 \n    0.000 \n    0.693 \n    0.693 \n    0 \n    0 \n    0.000 \n    0.083 \n    0.000 \n    1.000 \n    0.417 \n    0.083 \n    0 \n  \n  \n    4101161005 \n    51 \n    -71.241 \n    -29.864 \n    1.021 \n    0 \n    0 \n    1 \n    1 \n    0 \n    0 \n    0 \n    243.501 \n    10.120 \n    3.337 \n    4328.618 \n    0.000 \n    0.367 \n    0.079 \n    0.180 \n    0.419 \n    0.857 \n    0.000 \n    0.840 \n    0 \n    0 \n    0 \n    1 \n    1 \n    0 \n    0 \n    0 \n    0 \n    0.000 \n    0.693 \n    0.693 \n    0 \n    0 \n    0.000 \n    0.083 \n    0.083 \n    0.667 \n    0.250 \n    0.000 \n    0 \n  \n  \n    4101161005 \n    52 \n    -71.240 \n    -29.864 \n    1.022 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    320.023 \n    10.720 \n    3.324 \n    4328.618 \n    0.000 \n    0.367 \n    0.079 \n    0.180 \n    0.466 \n    0.905 \n    0.000 \n    0.840 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0.000 \n    0.000 \n    0.000 \n    0 \n    0 \n    0.000 \n    0.083 \n    0.167 \n    0.583 \n    0.250 \n    0.000 \n    0"
  },
  {
    "objectID": "cvm_ppp.html#evaluación-cramer-von-mises",
    "href": "cvm_ppp.html#evaluación-cramer-von-mises",
    "title": "4  CVM ppp",
    "section": "4.2 Evaluación Cramer Von Mises",
    "text": "4.2 Evaluación Cramer Von Mises\n\n4.2.1 Modelos MLB\nPara transformar los datos espaciales de los delitos y las predicciones de los modelos se utilizó la función propia ppp_maker() Section 6.4 que retorna el objeto ppp.\n\nLectura del Modelo.\n\nmodel_mlb <- readRDS(paste0(\"output/mlb_\",city,\"_\",delito,\".rds\"))\n\n\n\nTransformaciones de las predicciones del modelo a ppp.\n\nppp_mbl_pred <- ppp_maker(model = model_mlb, city = cityp, \n                     delito = delito, ppp_predict = T, w = w)\n\nplot(density(ppp_mbl_pred, adjust=.25))\n\n\n\n\n\n\nTransformaciones de los delitos reales a a ppp.\n\nppp_mbl <- ppp_maker(model = model_mlb, city = cityp, \n                          delito = delito, ppp_predict = F, w= w)\n\nplot(density(ppp_mbl, adjust=.25))\n\n\n\n\n\n\nEvaluación cdf.test.()\n\ncvm_mlb <- cdf.test(ppp_mbl, as.im(ppp_mbl), test=\"cvm\")\nplot(cvm_mlb)\n\n\n\n\n\nattr_model <- attr(cvm_mlb, which = \"frame\")\nim <- attr_model$values$Zimage \nr_mlb <- raster(im)\nproj4string(r_mlb)=crs_utm\nvalues(r_mlb) <- ifelse(values(r_mlb)==0, NA, values(r_mlb))\nplot(r_mlb)\n\n\n\n\n\npred_mlb <- predict_df(model = model_mlb, city = cityp, longlat = F)\npred_mlb <- st_as_sf(x = pred_mlb,                         \n                       coords = c(\"x\", \"y\"),\n                       crs = 32719) %>% \n  filter(!is.na(delitos))\n\nmapview(r_mlb, na.color= NA)+\n  mapview(pred_mlb, zcol = \"ypred\",hide = TRUE,  cex = 2)+\n  mapview(pred_mlb, zcol = \"delitos\", hide = TRUE,  cex = 2)\n\nWarning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj =\nprefer_proj): Discarded ellps WGS 84 in Proj4 definition: +proj=merc +a=6378137\n+b=6378137 +lat_ts=0 +lon_0=0 +x_0=0 +y_0=0 +k=1 +units=m +nadgrids=@null\n+wktext +no_defs +type=crs\n\n\nWarning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj =\nprefer_proj): Discarded datum World Geodetic System 1984 in Proj4 definition\n\n\n\n\n\n\n\n\n\n\n4.2.2 Modelos SAR\n\ncity <- ciudades[obs] \nmodel_sar <- readRDS(paste0(\"output/sar_\",city,\"_\",delito,\".rds\"))\n\nppp_sar_pred <- ppp_maker(model = model_sar, city = cityp, \n                            delito = delito, ppp_predict = T,\n                            w = w, nb = nb)\n\nThis method assumes the response is known - see manual page\n\nplot(density(ppp_sar_pred, adjust=.1))\n\n\n\n\n\nppp_sar <- ppp_maker(model = model_sar, city = cityp, \n                       delito = delito, ppp_predict = F, \n                       w = w, nb = nb)\n  \nplot(density(ppp_sar, adjust=.25))\n\n\n\n\n\n# st <- syrjala.test(ppp_mbl, ppp_mbl_pred, nsim = 999)\ncvm_sar <- cdf.test(ppp_sar, as.im(ppp_sar_pred), test=\"cvm\")\nplot(cvm_sar)\n\n\n\n\n\nattr_model <- attr(cvm_sar, which = \"frame\")\nim <- attr_model$values$Zimage \nr_sar <- raster(im)\nproj4string(r_sar)=crs_utm\nvalues(r_sar) <- ifelse(values(r_sar)==0, NA, values(r_sar))\n# plot(r_sar)\n\n\npred_sar <- predict_df(model = model_sar, city = cityp, longlat = F)\n\nThis method assumes the response is known - see manual page\n\npred_sar <- st_as_sf(x = pred_sar,                         \n                       coords = c(\"x\", \"y\"),\n                       crs = 32719) %>% \n  filter(!is.na(delitos))\n\nmapview(r_sar, na.color= NA)+\n  mapview(pred_sar, zcol = \"ypred\",hide = TRUE,  cex = 2)+\n  mapview(pred_sar, zcol = \"delitos\", hide = TRUE,  cex = 2)"
  },
  {
    "objectID": "residuos.html",
    "href": "residuos.html",
    "title": "5  Diagnósticos de Residuos",
    "section": "",
    "text": "source(\"scripts/recursos.R\")\nsource(\"scripts/funciones.R\")\n\n\n\n\n\n## geographic projections\ncrs_latlon <- \"+proj=longlat +datum=WGS84 +no_defs\"\ncrs_utm <- \n  \"+proj=utm +zone=19 +south +datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0\"\n\n\n\n\n\n# List of crimes/delitos and cities/ciudades\ncrimes = c(\n  \"Minor property offenses\",\n  \"Robberies\",\n  \"Burglaries\",\n  \"Drunkennes, damages and disorders\",\n  \"Family violence and aggression\",\n  \"Injuries, drugs and weapons\",\n  \"High violence and murder\"\n)\ndelitos = c(\"hurto\", \"robo\", \"asalto\", \"amen\", \"abus\", \"crim\", \"viol\")\n\n#ciudad de ejemplo\ncities <- c(\"Coquimbo-Serena\")\nciudades <- c(\"urb_4_18\")\nobs <- 1\ndelito <- delitos[1]\n\n\n\n\n\nPara el caso del presente ejemplo práctico se utiizará la ciudad de Coquimbo-Serena.\n\ncity <- ciudades[obs]\ncityp <- readRDS(paste0(\"data/\",city,\".rds\"))\ncityp <- spTransform(cityp, CRS(crs_utm))\n\nEl objeto espacial cityp cuyos puntos corresponde donde ha ucurrido eventos deictuales, cuyo formato SpatialPointDataFrame.\n\nMatriz de vecindad espacial: Se utilizó la función propia spatial_weights() @(sec-spatial-weights)\n\n# matriz de vecindad espacial\nnb <- spatial_weights(city_df = cityp, nvec= 12)\n\n\n\n\n\nSe utilizó funciónes de transformacion general mencionadas en Section 6.2 que corresponden a las siguientes:\n\nTransformación Cúbica\nTransformación Logarítmica\nCáculo del Lag Espacial\n\n\ncityp <- cityp %>%\n    st_as_sf(crs = 4326) %>% \n    mutate(across(.cols = all_of(delitos),\n                  .fns = t_cub, .names = \"cub{.col}\")) %>% \n    mutate(across(.cols = all_of(delitos),\n                  .fns = t_log1p, .names = \"log{.col}\")) %>% \n    mutate(across(.cols = all_of(delitos),\n                  .fns = lag_spatial, nb, .names = \"lag{.col}\")) %>%\n    as(\"Spatial\")\n\n\n\n\n\n \n  \n    zona \n    id \n    x \n    y \n    pflot \n    viol \n    crim \n    abus \n    amen \n    robo \n    hurto \n    asalto \n    denspob \n    educ \n    tamhog \n    constr \n    ofcom \n    vulzon \n    mobil \n    lpflot \n    neduc \n    ldenspob \n    lofcom \n    lconstr \n    cubhurto \n    cubrobo \n    cubasalto \n    cubamen \n    cubabus \n    cubcrim \n    cubviol \n    loghurto \n    logrobo \n    logasalto \n    logamen \n    logabus \n    logcrim \n    logviol \n    laghurto \n    lagrobo \n    lagasalto \n    lagamen \n    lagabus \n    lagcrim \n    lagviol \n  \n \n\n  \n    4101161005 \n    22 \n    -71.239 \n    -29.862 \n    1.000 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    144.756 \n    10.867 \n    3.170 \n    4328.618 \n    0.000 \n    0.367 \n    0.079 \n    0.178 \n    0.477 \n    0.767 \n    0.000 \n    0.840 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0.000 \n    0.000 \n    0.000 \n    0 \n    0 \n    0.083 \n    0.083 \n    0.083 \n    0.417 \n    0.250 \n    0.083 \n    0 \n  \n  \n    4101161005 \n    32 \n    -71.243 \n    -29.863 \n    1.000 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    227.772 \n    10.716 \n    3.393 \n    3830.009 \n    0.000 \n    0.367 \n    0.079 \n    0.178 \n    0.466 \n    0.846 \n    0.000 \n    0.829 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0.000 \n    0.000 \n    0.000 \n    0 \n    0 \n    0.000 \n    0.083 \n    0.083 \n    0.917 \n    0.583 \n    0.083 \n    0 \n  \n  \n    4101161005 \n    35 \n    -71.240 \n    -29.863 \n    1.034 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    1 \n    171.133 \n    11.801 \n    3.172 \n    4328.618 \n    0.000 \n    0.367 \n    0.079 \n    0.182 \n    0.550 \n    0.796 \n    0.000 \n    0.840 \n    0 \n    0 \n    1 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0.693 \n    0.000 \n    0.000 \n    0 \n    0 \n    0.000 \n    0.083 \n    0.000 \n    0.500 \n    0.250 \n    0.083 \n    0 \n  \n  \n    4101161005 \n    36 \n    -71.239 \n    -29.863 \n    1.000 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    154.603 \n    10.870 \n    3.135 \n    4328.618 \n    0.000 \n    0.367 \n    0.079 \n    0.178 \n    0.478 \n    0.779 \n    0.000 \n    0.840 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0.000 \n    0.000 \n    0.000 \n    0 \n    0 \n    0.083 \n    0.083 \n    0.083 \n    0.417 \n    0.250 \n    0.083 \n    0 \n  \n  \n    4101161005 \n    37 \n    -71.238 \n    -29.863 \n    1.025 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    155.145 \n    10.858 \n    3.148 \n    3230.309 \n    0.000 \n    0.367 \n    0.079 \n    0.181 \n    0.477 \n    0.779 \n    0.000 \n    0.815 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0.000 \n    0.000 \n    0.000 \n    0 \n    0 \n    0.083 \n    0.083 \n    0.083 \n    0.000 \n    0.250 \n    0.083 \n    0 \n  \n  \n    4101161001 \n    48 \n    -71.244 \n    -29.864 \n    1.125 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    168.179 \n    11.958 \n    3.336 \n    2384.222 \n    14.682 \n    0.292 \n    0.122 \n    0.193 \n    0.562 \n    0.793 \n    0.574 \n    0.788 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0.000 \n    0.000 \n    0.000 \n    0 \n    0 \n    0.000 \n    0.000 \n    0.250 \n    0.500 \n    0.417 \n    0.083 \n    0 \n  \n  \n    4101161005 \n    49 \n    -71.243 \n    -29.864 \n    1.071 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    212.743 \n    10.978 \n    3.415 \n    3795.759 \n    0.000 \n    0.367 \n    0.079 \n    0.187 \n    0.486 \n    0.834 \n    0.000 \n    0.828 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0.000 \n    0.000 \n    0.000 \n    0 \n    0 \n    0.000 \n    0.083 \n    0.250 \n    0.917 \n    0.583 \n    0.083 \n    0 \n  \n  \n    4101161005 \n    50 \n    -71.242 \n    -29.864 \n    1.000 \n    0 \n    0 \n    1 \n    1 \n    0 \n    0 \n    0 \n    220.188 \n    10.705 \n    3.409 \n    4026.613 \n    0.000 \n    0.367 \n    0.079 \n    0.178 \n    0.465 \n    0.840 \n    0.000 \n    0.834 \n    0 \n    0 \n    0 \n    1 \n    1 \n    0 \n    0 \n    0 \n    0 \n    0.000 \n    0.693 \n    0.693 \n    0 \n    0 \n    0.000 \n    0.083 \n    0.000 \n    1.000 \n    0.417 \n    0.083 \n    0 \n  \n  \n    4101161005 \n    51 \n    -71.241 \n    -29.864 \n    1.021 \n    0 \n    0 \n    1 \n    1 \n    0 \n    0 \n    0 \n    243.501 \n    10.120 \n    3.337 \n    4328.618 \n    0.000 \n    0.367 \n    0.079 \n    0.180 \n    0.419 \n    0.857 \n    0.000 \n    0.840 \n    0 \n    0 \n    0 \n    1 \n    1 \n    0 \n    0 \n    0 \n    0 \n    0.000 \n    0.693 \n    0.693 \n    0 \n    0 \n    0.000 \n    0.083 \n    0.083 \n    0.667 \n    0.250 \n    0.000 \n    0 \n  \n  \n    4101161005 \n    52 \n    -71.240 \n    -29.864 \n    1.022 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    320.023 \n    10.720 \n    3.324 \n    4328.618 \n    0.000 \n    0.367 \n    0.079 \n    0.180 \n    0.466 \n    0.905 \n    0.000 \n    0.840 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0.000 \n    0.000 \n    0.000 \n    0 \n    0 \n    0.000 \n    0.083 \n    0.167 \n    0.583 \n    0.250 \n    0.000 \n    0"
  },
  {
    "objectID": "residuos.html#evaluación-de-residuos",
    "href": "residuos.html#evaluación-de-residuos",
    "title": "5  Diagnósticos de Residuos",
    "section": "5.2 Evaluación De Residuos",
    "text": "5.2 Evaluación De Residuos\n\n5.2.1 Modelos MLB\n\nLectura del Modelo.\n\n\nWarning in spTransform(xSP, CRSobj, ...): NULL source CRS comment, falling back\nto PROJ string\n\n\nWarning in wkt(obj): CRS object has no comment\n\n\n\nmodel_mlb <- readRDS(paste0(\"output/mlb_\",city,\"_\",delito,\".rds\"))\n\n\n\n5.2.1.1 Extracción de Residuos\n\ncityp$res_fit_mlb <- residuals(model_mlb)\ncityp$fitted_fit_mlb <- fitted(model_mlb)\ncityp$sd_breaks_mlb <- scale(cityp$res_fit_mlb)[,1]\n\n\nbreaks_qt <- classInt::classIntervals(cityp$sd_breaks_mlb, \n                                      n = 5, style = \"fisher\")\nmy_breaks <- round(breaks_qt$brks,2)\n\n\ncity_sf <- cityp %>% st_as_sf(crs = 32719) \nresiduos_mv <- mapview(city_sf,zcol=\"res_fit_mlb\", at =my_breaks, cex=2) \nresiduos_mv\n\n\n\n5.2.1.2 Global Moran\nGlobal Moran a Variable Depediente\n\nspdep::moran.test(x = cityp$laghurto,  listw = nb)\n\n\n    Moran I test under randomisation\n\ndata:  cityp$laghurto  \nweights: nb    \n\nMoran I statistic standard deviate = 174.4, p-value <\n0.00000000000000022\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     0.7640052224     -0.0001215805      0.0000191963 \n\n# moran.plot(x =cityp$laghurto,  listw = nb, labels=as.character(cityp$id))\n\nGlobal Moran de Residuos\n\nspdep::moran.test(x = cityp$res_fit_mlb,  listw = nb)\n\n\n    Moran I test under randomisation\n\ndata:  cityp$res_fit_mlb  \nweights: nb    \n\nMoran I statistic standard deviate = 19.256, p-value <\n0.00000000000000022\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n    0.08478830236    -0.00012158055     0.00001944476 \n\n# moran.plot(x =cityp$res_fit_mlb,  listw = nb, labels=as.character(cityp$id))\n\n\n\n5.2.1.3 Local Moran de Residuos\n\n# Calcular Local Moran\nlmoran = localmoran(cityp$res_fit_mlb, nb)\ncityp$res_scaled = as.numeric(scale(cityp$res_fit_mlb))\ncityp$lag_scaled = lag.listw(nb, cityp$res_scaled)\ncityp@data = cbind(cityp@data, lmoran = as.data.frame(lmoran)[, 5])\n\n# Umbral de significancia estadistica\npval=0.05\n\n# Definir cuadrantes\ncityp[(cityp$res_scaled >= 0 & cityp$lag_scaled >= 0) & (cityp$lmoran <= pval), \"clusterM\"] = \"HH\" # plot\ncityp[(cityp$res_scaled <= 0 & cityp$lag_scaled <= 0) & (cityp$lmoran <= pval), \"clusterM\"] = \"LL\" # plot\ncityp[(cityp$res_scaled >= 0 & cityp$lag_scaled <= 0) & (cityp$lmoran <= pval), \"clusterM\"] = \"HL\"\ncityp[(cityp$res_scaled <= 0 & cityp$lag_scaled >= 0) & (cityp$lmoran <= pval), \"clusterM\"] = \"LH\"\ncityp[(lmoran[, 5] > pval), \"clusterM\"] = \"NS\"\ntable(cityp$clusterM)\n\n\n  HH   HL   LH   LL   NS \n 284   33  295  331 7283 \n\n\n\ncity_sf <- cityp %>% st_as_sf(crs = 32719) %>% \n  filter(clusterM != \"NS\")\n\nresiduos_moran <- mapview(city_sf,zcol=\"clusterM\", cex=2 )\nresiduos_moran\n\n\n\n\n\n\n\n\n\n5.2.2 Modelos SAR\n\n\nWarning in spTransform(xSP, CRSobj, ...): NULL source CRS comment, falling back\nto PROJ string\n\n\nWarning in wkt(obj): CRS object has no comment\n\n\n\nmodel_sar <- readRDS(paste0(\"output/sar_\",city,\"_\",delito,\".rds\"))\n\n\n5.2.2.1 Extracción de Residuos SAR\n\ncityp$res_fit_sar <- residuals(model_sar)\ncityp$fitted_fit_sar <- fitted(model_sar)\n\nThis method assumes the response is known - see manual page\n\ncityp$sd_breaks_sar <- scale(cityp$res_fit_sar)[,1]\n\n\nbreaks_qt <- classInt::classIntervals(cityp$sd_breaks_sar, \n                                      n = 5, style = \"fisher\")\nmy_breaks <- round(breaks_qt$brks,2)\n\n\ncity_sf <- cityp %>% st_as_sf(crs = 32719) \n\nresiduos_mv <- mapview(city_sf,zcol=\"res_fit_sar\", at =my_breaks, cex=2) \n  \nresiduos_mv\n\n\n\n5.2.2.2 Global Moran\nGlobal Moran a Variable Depediente\n\nspdep::moran.test(x = cityp$cubhurto,  listw = nb)\n\n\n    Moran I test under randomisation\n\ndata:  cityp$cubhurto  \nweights: nb    \n\nMoran I statistic standard deviate = 79.737, p-value <\n0.00000000000000022\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n    0.35153153375    -0.00012158055     0.00001944977 \n\n# moran.plot(x =cityp$laghurto,  listw = nb, labels=as.character(cityp$id))\n\nGlobal Moran de Residuos\n\nspdep::moran.test(x = cityp$res_fit_sar,  listw = nb)\n\n\n    Moran I test under randomisation\n\ndata:  cityp$res_fit_sar  \nweights: nb    \n\nMoran I statistic standard deviate = -1.2062, p-value = 0.8861\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n   -0.00544188551    -0.00012158055     0.00001945508 \n\n# moran.plot(x =cityp$res_fit_mlb,  listw = nb, labels=as.character(cityp$id))\n\n\n\n5.2.2.3 Local Moran de Residuos\n\n# Calcular Local Moran\nlmoran = localmoran(cityp$res_fit_sar, nb)\n\ncityp$res_scaled = as.numeric(scale(cityp$res_fit_sar))\ncityp$lag_scaled = lag.listw(nb, cityp$res_scaled)\ncityp@data = cbind(cityp@data, lmoran = as.data.frame(lmoran)[, 5])\n\n# Umbral de significancia estadistica\npval=0.05\n\n# Definir cuadrantes\ncityp[(cityp$res_scaled >= 0 & cityp$lag_scaled >= 0) & (cityp$lmoran <= pval), \"clusterM\"] = \"HH\" # plot\ncityp[(cityp$res_scaled <= 0 & cityp$lag_scaled <= 0) & (cityp$lmoran <= pval), \"clusterM\"] = \"LL\" # plot\ncityp[(cityp$res_scaled >= 0 & cityp$lag_scaled <= 0) & (cityp$lmoran <= pval), \"clusterM\"] = \"HL\"\ncityp[(cityp$res_scaled <= 0 & cityp$lag_scaled >= 0) & (cityp$lmoran <= pval), \"clusterM\"] = \"LH\"\ncityp[(lmoran[, 5] > pval), \"clusterM\"] = \"NS\"\ntable(cityp$clusterM)\n\n\n  HH   HL   LH   LL   NS \n 214   19  156   32 7805 \n\n\n\ncity_sf <- cityp %>% st_as_sf(crs = 32719) %>% \n  filter(clusterM != \"NS\")\n\nresiduos_moran <- mapview(city_sf,zcol=\"clusterM\", cex=2 )\nresiduos_moran"
  },
  {
    "objectID": "funciones.html",
    "href": "funciones.html",
    "title": "6  Funciones",
    "section": "",
    "text": "The nb2listw function supplements a neighbours list with spatial weights for the chosen coding scheme. The can.be.simmed helper function checks whether a spatial weights object is similar to symmetric and can be so transformed to yield real eigenvalues or for Cholesky decomposition.\n\nspatial_weights <-  function(city_df, nvec = 12,\n                             style = \"W\", longlat = F){\n  nb <- spdep::nb2listw(neighbours = spdep::knn2nb(\n    knn = spdep::knearneigh( x = city_df, k = nvec, longlat = F)), \n    style = style)\n  return(nb)\n}"
  },
  {
    "objectID": "funciones.html#sec-f-transform",
    "href": "funciones.html#sec-f-transform",
    "title": "6  Funciones",
    "section": "6.2 Funciones de Transformación",
    "text": "6.2 Funciones de Transformación\n\nt_cub <-  function(x) x**(1/3)\nt_log1p <-  function(x) log1p(x)\nlag_spatial <-  function(x, nb){\n  as.numeric(spdep::lag.listw(x=nb, var=x))\n}"
  },
  {
    "objectID": "funciones.html#sec-jenks",
    "href": "funciones.html#sec-jenks",
    "title": "6  Funciones",
    "section": "6.3 Quiebres de Jenks",
    "text": "6.3 Quiebres de Jenks\n\nvals_jenk_breaks <-  function(x, deciles = 10, seed=1 ){\n  set.seed(seed)\n  \n  y <- cut( x,c(unique(getJenksBreaks(x,deciles)), Inf),\n            labels = F, include.lowest = T, right = F)\n  return(y)\n}"
  },
  {
    "objectID": "funciones.html#sec-ppp-maker",
    "href": "funciones.html#sec-ppp-maker",
    "title": "6  Funciones",
    "section": "6.4 ppp_maker",
    "text": "6.4 ppp_maker\nPara transformar los datos espaciales de los delitos y las predicciones de los modelos se utilizó la función propia ppp_maker(), la cual utiliza el parámetro ppp_predict = T en caso que se quiera calcular ppp para la predicción. El valor es de predicción o delitos según sea el caso se clasfica con quiebres de jenks Section 6.3.\n\nppp_maker <- function(model, city, delito, ppp_predict = T, w, nb){\n  deciles <- 10\n  city_sf <- city %>% st_as_sf() \n\n    \n  if(ppp_predict== T){\n    if (class(model)[1] == \"Sarlm\"){\n      ypred=as.numeric(predict(model, listw = nb, pred.type = \"TS\")**3)\n    }\n    if (class(model)[1] == \"glmerMod\"){\n      ypred=exp(predict(model))\n    }\n    city <- city_sf%>% \n      mutate(ypred= ypred)%>% \n      mutate(ypred_adj = vals_jenk_breaks(ypred)) %>% \n      filter(ypred_adj > 1) %>% \n      as(\"Spatial\")\n    # marks = city@data[,\"ypred_adj\"]\n  }else{\n    city <- city_sf %>%\n      mutate(delito_adj = vals_jenk_breaks(!!rlang::sym(delito))) %>%\n      filter(delito_adj>1) %>% \n      as(\"Spatial\")\n    # marks = city@data[,\"delito_adj\"]\n  }\n  \n  pts <- coordinates(city)\n  p <- ppp(pts[,1], pts[,2], window = w)\n  # ds_al <- density(p, adjust=.25)\n  # plot(ds_al, main='Densidad de Delito')\n  return(p)\n  \n}"
  }
]