options(scipen = 999)
require(knitr)
require(kableExtra)
source("scripts/recursos.R")
source("scripts/funciones.R")
## geographic projections
crs_latlon <- "+proj=longlat +datum=WGS84 +no_defs"
crs_utm <-
"+proj=utm +zone=19 +south +datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0"
# List of crimes/delitos and cities/ciudades
crimes = c(
"Minor property offenses",
"Robberies",
"Burglaries",
"Drunkennes, damages and disorders",
"Family violence and aggression",
"Injuries, drugs and weapons",
"High violence and murder"
)
delitos = c("hurto", "robo", "asalto", "amen", "abus", "crim", "viol")
#ciudad de ejemplo
cities <- c("Coquimbo-Serena")
ciudades <- c("urb_4_18")
obs <- 1
delito <- delitos[1]
city <- ciudades[obs]
cityp <- readRDS(paste0("data/",city,".rds"))
cityp <- spTransform(cityp, CRS(crs_utm))
mapview(cityp %>% st_as_sf(), zcol = "hurto", cex = 3)
# matriz de vecindad espacial
nb <- spatial_weights(city_df = cityp, nvec= 12)
cityp <- cityp %>%
st_as_sf(crs = 4326) %>%
mutate(across(.cols = all_of(delitos),
.fns = t_cub, .names = "cub{.col}")) %>%
mutate(across(.cols = all_of(delitos),
.fns = t_log1p, .names = "log{.col}")) %>%
mutate(across(.cols = all_of(delitos),
.fns = lag_spatial, nb, .names = "lag{.col}")) %>%
as("Spatial")
kable_styling(
kable(cityp@data %>% head(10), digits = 3, row.names = FALSE, align = "c",
caption = NULL, format = "html"),
bootstrap_options = c("striped", "hover", "condensed"),
position = "center", full_width = FALSE)
model_mlb <- readRDS(paste0("output/mlb_",city,"_",delito,".rds"))
model_mlb
summary(model_mlb)
summary(model_mlb)
summary(model_mlb)
str(model_mlb)
model_mlb@resp
summary(model_mlb)
residuals(model_mlb)
residuals_mlb <- residuals(model_mlb)
residuals_mlb
cityp$residuals <- residuals_mlb
moran.test(cityp$residuals,listw=nb)
lm.morantest(model_mlb, nb, alternative = "greater")
model <- model@frame[, -1
model <- model_mlb
model@frame
model@frame %>% head()
cityp$res_fit <- residuals(model_mlb)
cityp$fitted_fit <- fitted(model_mlb)
cityp$sd_breaks <- scale(cityp$model_mlb)[,1]
cityp$sd_breaks <- scale(cityp$res_fit)[,1]
breaks_qt <- classInt::classIntervals(cityp$res_fit1,
n = 5, style = "fisher")
breaks_qt <- classInt::classIntervals(cityp$res_fit,
n = 5, style = "fisher")
breaks_qt
breaks_qt <- classInt::classIntervals(cityp$res_fit,
n = 5, style = "fisher") %>%
round(2)
breaks_qt <- classInt::classIntervals(cityp$res_fit,
n = 5, style = "fisher") %>%
round(.,2)
breaks_qt <- classInt::classIntervals(cityp$res_fit,
n = 5, style = "fisher")
breaks_qt
breaks_qt <- round(breaks_qt, 2)
breaks_qt
breaks_qt <- classInt::classIntervals(cityp$res_fit,
n = 5, style = "fisher") %>%
round(.$brks, 2)
breaks_qt <- classInt::classIntervals(cityp$res_fit,
n = 5, style = "fisher") %>%
round(x = .$brks, 2)
breaks_qt
library(purrr)
breaks_qt <- classInt::classIntervals(cityp$res_fit,
n = 5, style = "fisher") %>%
map(~round(.$brks, 2))
breaks_qt <- classInt::classIntervals(cityp$res_fit,
n = 5, style = "fisher") %>%
map(~round(.x$brks, 2))
breaks_qt <- classInt::classIntervals(cityp$res_fit,
n = 5, style = "fisher") %>%
map(~round(brks, 2))
breaks_qt <- classInt::classIntervals(cityp$res_fit,
n = 5, style = "fisher") my_breaks <- round(breaks_qt$brks,2)
library(purrr)
breaks_qt <- classInt::classIntervals(cityp$res_fit,
n = 5, style = "fisher") my_breaks <- round(breaks_qt$brks,2)
breaks_qt <- classInt::classIntervals(cityp$res_fit,
n = 5, style = "fisher")
my_breaks <- round(breaks_qt$brks,2)
city_sf <- cityp %>% st_as_sf(crs = 4326)
my_breaks <- round(breaks_qt$brks,2)
city_sf <- cityp %>% st_as_sf(crs = 4326)
residuos  <- ggplot() +
geom_sf(data = city_sf, aes(fill= sd_breaks), alpha = 0.8, colour = "NA")+
scale_fill_viridis_b(breaks = my_breaks, option = "plasma")+
ggtitle(paste0("Residuos OSL de 'dalg'")) +
theme_bw() +
theme(panel.grid.major = element_line(colour = "gray94"),
panel.grid.minor = element_line(colour = "gray94"),
plot.title = element_text(hjust = 0.5, size = rel(0.9)),
plot.subtitle = element_text(hjust = 0.5, size = rel(0.7)),
legend.title = element_text(size = rel(0.7)),
panel.background = element_rect(fill = "gray100"),
axis.text.x = element_text(color = "grey20", size = rel(0.7)),
axis.text.y = element_text(color = "grey20", size = rel(0.7)))
residuos
city_sf
cityp$res_fit <- residuals(model_mlb)
cityp$fitted_fit <- fitted(model_mlb)
cityp$sd_breaks <- scale(cityp$res_fit)[,1]
breaks_qt <- classInt::classIntervals(cityp$res_fit,
n = 5, style = "fisher")
my_breaks <- round(breaks_qt$brks,2)
my_breaks <- round(breaks_qt$brks,2)
city_sf <- cityp %>% st_as_sf(crs = 4326)
residuos  <- ggplot() +
geom_sf(data = city_sf, aes(fill= sd_breaks), alpha = 0.8, colour = "NA")+
scale_fill_viridis_b(breaks = my_breaks, option = "plasma")+
ggtitle(paste0("Residuos OSL de 'dalg'")) +
theme_bw() +
theme(panel.grid.major = element_line(colour = "gray94"),
panel.grid.minor = element_line(colour = "gray94"),
plot.title = element_text(hjust = 0.5, size = rel(0.9)),
plot.subtitle = element_text(hjust = 0.5, size = rel(0.7)),
legend.title = element_text(size = rel(0.7)),
panel.background = element_rect(fill = "gray100"),
axis.text.x = element_text(color = "grey20", size = rel(0.7)),
axis.text.y = element_text(color = "grey20", size = rel(0.7)))
residuos
cityp
city_sf <- cityp %>% st_as_sf(crs = 32719)
residuos  <- ggplot() +
geom_sf(data = city_sf, aes(fill= sd_breaks), alpha = 0.8, colour = "NA")+
scale_fill_viridis_b(breaks = my_breaks, option = "plasma")+
ggtitle(paste0("Residuos OSL de 'dalg'")) +
theme_bw() +
theme(panel.grid.major = element_line(colour = "gray94"),
panel.grid.minor = element_line(colour = "gray94"),
plot.title = element_text(hjust = 0.5, size = rel(0.9)),
plot.subtitle = element_text(hjust = 0.5, size = rel(0.7)),
legend.title = element_text(size = rel(0.7)),
panel.background = element_rect(fill = "gray100"),
axis.text.x = element_text(color = "grey20", size = rel(0.7)),
axis.text.y = element_text(color = "grey20", size = rel(0.7)))
residuos
city_sf <- cityp %>% st_as_sf(crs = 32719) %>% st_transform(4326)
residuos  <- ggplot() +
geom_sf(data = city_sf, aes(fill= sd_breaks), alpha = 0.8, colour = "NA")+
scale_fill_viridis_b(breaks = my_breaks, option = "plasma")+
ggtitle(paste0("Residuos OSL de 'dalg'")) +
theme_bw() +
theme(panel.grid.major = element_line(colour = "gray94"),
panel.grid.minor = element_line(colour = "gray94"),
plot.title = element_text(hjust = 0.5, size = rel(0.9)),
plot.subtitle = element_text(hjust = 0.5, size = rel(0.7)),
legend.title = element_text(size = rel(0.7)),
panel.background = element_rect(fill = "gray100"),
axis.text.x = element_text(color = "grey20", size = rel(0.7)),
axis.text.y = element_text(color = "grey20", size = rel(0.7)))
residuos
residuos  <- ggplot() +
geom_sf(data = city_sf, aes(fill= sd_breaks),  colour = "NA")+
scale_fill_viridis_b(breaks = my_breaks, option = "plasma")+
ggtitle(paste0("Residuos OSL de 'dalg'")) +
theme_bw() +
theme(panel.grid.major = element_line(colour = "gray94"),
panel.grid.minor = element_line(colour = "gray94"),
plot.title = element_text(hjust = 0.5, size = rel(0.9)),
plot.subtitle = element_text(hjust = 0.5, size = rel(0.7)),
legend.title = element_text(size = rel(0.7)),
panel.background = element_rect(fill = "gray100"),
axis.text.x = element_text(color = "grey20", size = rel(0.7)),
axis.text.y = element_text(color = "grey20", size = rel(0.7)))
residuos
residuos  <- ggplot() +
geom_sf(data = city_sf, aes(fill= sd_breaks))+
scale_fill_viridis_b(breaks = my_breaks, option = "plasma")+
ggtitle(paste0("Residuos OSL de 'dalg'")) +
theme_bw() +
theme(panel.grid.major = element_line(colour = "gray94"),
panel.grid.minor = element_line(colour = "gray94"),
plot.title = element_text(hjust = 0.5, size = rel(0.9)),
plot.subtitle = element_text(hjust = 0.5, size = rel(0.7)),
legend.title = element_text(size = rel(0.7)),
panel.background = element_rect(fill = "gray100"),
axis.text.x = element_text(color = "grey20", size = rel(0.7)),
axis.text.y = element_text(color = "grey20", size = rel(0.7)))
residuos
residuos  <- ggplot() +
geom_sf(data = city_sf, aes(fill= sd_breaks), size=1)+
scale_fill_viridis_b(breaks = my_breaks, option = "plasma")+
ggtitle(paste0("Residuos OSL de 'dalg'")) +
theme_bw() +
theme(panel.grid.major = element_line(colour = "gray94"),
panel.grid.minor = element_line(colour = "gray94"),
plot.title = element_text(hjust = 0.5, size = rel(0.9)),
plot.subtitle = element_text(hjust = 0.5, size = rel(0.7)),
legend.title = element_text(size = rel(0.7)),
panel.background = element_rect(fill = "gray100"),
axis.text.x = element_text(color = "grey20", size = rel(0.7)),
axis.text.y = element_text(color = "grey20", size = rel(0.7)))
residuos
residuos  <- ggplot() +
geom_sf(data = city_sf, aes(fill= sd_breaks), size=0.5)+
scale_fill_viridis_b(breaks = my_breaks, option = "plasma")+
ggtitle(paste0("Residuos OSL de 'dalg'")) +
theme_bw() +
theme(panel.grid.major = element_line(colour = "gray94"),
panel.grid.minor = element_line(colour = "gray94"),
plot.title = element_text(hjust = 0.5, size = rel(0.9)),
plot.subtitle = element_text(hjust = 0.5, size = rel(0.7)),
legend.title = element_text(size = rel(0.7)),
panel.background = element_rect(fill = "gray100"),
axis.text.x = element_text(color = "grey20", size = rel(0.7)),
axis.text.y = element_text(color = "grey20", size = rel(0.7)))
residuos
my_breaks
breaks_qt <- classInt::classIntervals(cityp$sd_breaks,
n = 5, style = "fisher")
my_breaks <- round(breaks_qt$brks,2)
city_sf <- cityp %>% st_as_sf(crs = 32719) %>% st_transform(4326)
residuos  <- ggplot() +
geom_sf(data = city_sf, aes(fill= sd_breaks), size=0.5)+
scale_fill_viridis_b(breaks = my_breaks, option = "plasma")+
ggtitle(paste0("Residuos OSL de 'dalg'")) +
theme_bw() +
theme(panel.grid.major = element_line(colour = "gray94"),
panel.grid.minor = element_line(colour = "gray94"),
plot.title = element_text(hjust = 0.5, size = rel(0.9)),
plot.subtitle = element_text(hjust = 0.5, size = rel(0.7)),
legend.title = element_text(size = rel(0.7)),
panel.background = element_rect(fill = "gray100"),
axis.text.x = element_text(color = "grey20", size = rel(0.7)),
axis.text.y = element_text(color = "grey20", size = rel(0.7)))
residuos
hist(city_sf$sd_breaks)
hist(city_sf$res_fit)
breaks_qt <- classInt::classIntervals(cityp$res_fit,
n = 5, style = "fisher")
my_breaks <- round(breaks_qt$brks,2)
city_sf <- cityp %>% st_as_sf(crs = 32719) %>% st_transform(4326)
residuos  <- ggplot() +
geom_sf(data = city_sf, aes(fill= res_fit), size=0.5)+
scale_fill_viridis_b(breaks = my_breaks, option = "plasma")+
ggtitle(paste0("Residuos MLB de 'Hurto'")) +
theme_bw() +
theme(panel.grid.major = element_line(colour = "gray94"),
panel.grid.minor = element_line(colour = "gray94"),
plot.title = element_text(hjust = 0.5, size = rel(0.9)),
plot.subtitle = element_text(hjust = 0.5, size = rel(0.7)),
legend.title = element_text(size = rel(0.7)),
panel.background = element_rect(fill = "gray100"),
axis.text.x = element_text(color = "grey20", size = rel(0.7)),
axis.text.y = element_text(color = "grey20", size = rel(0.7)))
residuos
my_breaks
residuos_mv <- mapview(city_sf,zcol="res_fit", at =my_breaks)
residuos_mv
residuos_mv <- mapview(city_sf,zcol="res_fit", at =my_breaks, cex=1)
residuos_mv
residuos_mv <- mapview(city_sf,zcol="sd_breaks", at =my_breaks, cex=1)
residuos_mv
city_sf <- cityp %>% st_as_sf(crs = 32719)
residuos_mv <- mapview(city_sf,zcol="sd_breaks", at =my_breaks, cex=2)
residuos_mv
breaks_qt <- classInt::classIntervals(cityp$sd_breaks,
n = 5, style = "fisher")
my_breaks <- round(breaks_qt$brks,2)
city_sf <- cityp %>% st_as_sf(crs = 32719)
residuos_mv <- mapview(city_sf,zcol="sd_breaks", at =my_breaks, cex=2)
residuos_mv
residuos_mv <- mapview(city_sf,zcol="res_fit_mlb", at =my_breaks, cex=2) %>%
mapview(city_sf,zcol="sd_breaks_mlb", at =my_breaks, cex=2, hide =T) %>%
mapview(city_sf,zcol="fitted_fit_mlb", at =my_breaks, cex=2, hide =T)
cityp$res_fit_mlb <- residuals(model_mlb)
cityp$fitted_fit_mlb <- fitted(model_mlb)
cityp$sd_breaks_mlb <- scale(cityp$res_fit_mlb)[,1]
breaks_qt <- classInt::classIntervals(cityp$sd_breaks_mlb,
n = 5, style = "fisher")
my_breaks <- round(breaks_qt$brks,2)
city_sf <- cityp %>% st_as_sf(crs = 32719)
residuos_mv <- mapview(city_sf,zcol="res_fit_mlb", at =my_breaks, cex=2) %>%
mapview(city_sf,zcol="sd_breaks_mlb", at =my_breaks, cex=2, hide =T) %>%
mapview(city_sf,zcol="fitted_fit_mlb", at =my_breaks, cex=2, hide =T)
residuos_mv
city_sf <- cityp %>% st_as_sf(crs = 32719)
residuos_mv <- mapview(city_sf,zcol="res_fit_mlb", at =my_breaks, cex=2) %>%
mapview(city_sf,zcol="sd_breaks_mlb", at =my_breaks, cex=2, hide =T) %>%
mapview(city_sf,zcol="fitted_fit_mlb", at =my_breaks, cex=2, hide =T)
residuos_mv <- mapview(city_sf,zcol="res_fit_mlb", at =my_breaks, cex=2) +
mapview(city_sf,zcol="sd_breaks_mlb", at =my_breaks, cex=2, hide =T) +
mapview(city_sf,zcol="fitted_fit_mlb", at =my_breaks, cex=2, hide =T)
residuos_mv
residuos_mv <- mapview(city_sf,zcol="res_fit_mlb", at =my_breaks, cex=2) +
mapview(city_sf,zcol="sd_breaks_mlb", at =my_breaks, cex=2, hide =T,
legend = F) +
mapview(city_sf,zcol="fitted_fit_mlb", at =my_breaks, cex=2, hide =T)
residuos_mv
city <- ciudades[obs]
model_sar <- readRDS(paste0("output/sar_",city,"_",delito,".rds"))
cityp$res_fit_sar <- residuals(model_sar)
cityp$fitted_fit_sar <- fitted(model_sar)
cityp$sd_breaks_sar <- scale(cityp$res_fit_sar)[,1]
breaks_qt <- classInt::classIntervals(cityp$sd_breaks_sar,
n = 5, style = "fisher")
my_breaks <- round(breaks_qt$brks,2)
city_sf <- cityp %>% st_as_sf(crs = 32719)
residuos_mv <- mapview(city_sf,zcol="res_fit_sar", at =my_breaks, cex=2) +
mapview(city_sf,zcol="sd_breaks_sar", at =my_breaks, cex=2, hide =T) +
mapview(city_sf,zcol="fitted_fit_sar", at =my_breaks, cex=2, hide =T)
residuos_mv
spdep::moran.test(x = cityp$res_fit_mlb,  listw = nb)
spdep::moran.test(x = cityp$cubhurto,  listw = nb)
spdep::moran.test(x = cityp$laghurto,  listw = nb)
spdep::moran.test(x = cityp$res_fit_mlb,  listw = nb)
head(cityp@data)
moran.plot(x =cityp$laghurto,  listw = nb, labels=as.character(ciudad$id))
moran.plot(x =cityp$laghurto,  listw = nb, labels=as.character(cityp$id))
moran.plot(x =cityp$res_fit_mlb,  listw = nb, labels=as.character(cityp$id))
# Calcular Local Moran
lmoran = localmoran(cityp$res_fit_mlb, nb)
lmoran
cityp$res_scaled = as.numeric(scale(cityp$res_fit_mlb))
cityp$lag_scaled = lag.listw(nb, cityp$res_scaled)
cityp$lag_scaled = lag.listw(nb, cityp$res_scaled)
cityp@data = cbind(ciudad@data, lmoran = as.data.frame(lmoran)[, 5])
cityp@data = cbind(cityp@data, lmoran = as.data.frame(lmoran)[, 5])
# Umbral de significancia estadistica
pval=0.05
# Definir cuadrantes
cityp[(cityp$res_scaled >= 0 & cityp$lag_scaled >= 0) & (cityp$lmoran <= pval), "clusterM"] = "HH" # plot
cityp[(cityp$res_scaled <= 0 & cityp$lag_scaled <= 0) & (cityp$lmoran <= pval), "clusterM"] = "LL" # plot
cityp[(cityp$res_scaled >= 0 & cityp$lag_scaled <= 0) & (cityp$lmoran <= pval), "clusterM"] = "HL"
cityp[(cityp$res_scaled <= 0 & cityp$lag_scaled >= 0) & (cityp$lmoran <= pval), "clusterM"] = "LH"
cityp[(cityp[, 5] > 0.05), "clusterM"] = "NS"
table(cityp$res_scaled)
table(cityp$clusterM)
city_sf <- cityp %>% st_as_sf(crs = 32719)
residuos_mv <- mapview(city_sf,zcol="clusterM", cex=2)
residuos_moran <- mapview(city_sf,zcol="clusterM", cex=2)
residuos_moran
residuos_moran <- mapview(city_sf,zcol="clusterM", cex=2, na.color =NA)
residuos_moran
residuos_moran <- mapview(city_sf,zcol="clusterM", cex=2, na.color ="transparent")
residuos_moran
residuos_moran <- mapview(city_sf,zcol="clusterM", cex=2,
na.color="transparent" )
residuos_moran
residuos_moran <- mapview(city_sf,zcol="clusterM", cex=2,
na.color=NULL )
residuos_moran <- mapview(city_sf,zcol="clusterM", cex=2,
na.color=NA )
residuos_moran
residuos_moran <- mapview(city_sf,zcol="clusterM", cex=2,
na.alpha=1 )
residuos_moran
residuos_moran <- mapview(city_sf,zcol="clusterM", cex=2,
na.alpha=0 )
residuos_moran
city_sf <- cityp %>% st_as_sf(crs = 32719) %>%
filter(is.na(clusterM))
residuos_moran <- mapview(city_sf,zcol="clusterM", cex=2,
na.alpha=0 )
residuos_moran <- mapview(city_sf,zcol="clusterM", cex=2 )
residuos_moran
city_sf <- cityp %>% st_as_sf(crs = 32719) %>%
filter(!is.na(clusterM))
residuos_moran <- mapview(city_sf,zcol="clusterM", cex=2 )
residuos_moran
# Calcular Local Moran
lmoran = localmoran(cityp$res_fit_mlb, nb)
cityp$res_scaled = as.numeric(scale(cityp$res_fit_mlb))
cityp$lag_scaled = lag.listw(nb, cityp$res_scaled)
cityp@data = cbind(cityp@data, lmoran = as.data.frame(lmoran)[, 5])
# Umbral de significancia estadistica
pval=0.05
# Definir cuadrantes
cityp[(cityp$res_scaled >= 0 & cityp$lag_scaled >= 0) & (cityp$lmoran <= pval), "clusterM"] = "HH" # plot
cityp[(cityp$res_scaled <= 0 & cityp$lag_scaled <= 0) & (cityp$lmoran <= pval), "clusterM"] = "LL" # plot
cityp[(cityp$res_scaled >= 0 & cityp$lag_scaled <= 0) & (cityp$lmoran <= pval), "clusterM"] = "HL"
cityp[(cityp$res_scaled <= 0 & cityp$lag_scaled >= 0) & (cityp$lmoran <= pval), "clusterM"] = "LH"
cityp[(cityp[, 5] > 0.05), "clusterM"] = "NS"
cityp
cityp@data
cityp@data %>% head(cityp)
cityp@data %>% head()
# Calcular Local Moran
lmoran = localmoran(cityp$res_fit_mlb, nb)
cityp$res_scaled = as.numeric(scale(cityp$res_fit_mlb))
cityp$lag_scaled = lag.listw(nb, cityp$res_scaled)
cityp@data = cbind(cityp@data, lmoran = as.data.frame(lmoran)[, 5])
# Umbral de significancia estadistica
pval=0.05
# Calcular Local Moran
lmoran = localmoran(cityp$res_fit_mlb, nb)
cityp$res_scaled = as.numeric(scale(cityp$res_fit_mlb))
cityp$lag_scaled = lag.listw(nb, cityp$res_scaled)
cityp <- readRDS(paste0("data/",city,".rds"))
cityp <- spTransform(cityp, CRS(crs_utm))
city <- ciudades[obs]
cityp <- readRDS(paste0("data/",city,".rds"))
cityp <- spTransform(cityp, CRS(crs_utm))
model_mlb <- readRDS(paste0("output/mlb_",city,"_",delito,".rds"))
cityp$res_fit_mlb <- residuals(model_mlb)
cityp$fitted_fit_mlb <- fitted(model_mlb)
cityp$sd_breaks_mlb <- scale(cityp$res_fit_mlb)[,1]
breaks_qt <- classInt::classIntervals(cityp$sd_breaks_mlb,
n = 5, style = "fisher")
my_breaks <- round(breaks_qt$brks,2)
city_sf <- cityp %>% st_as_sf(crs = 32719)
residuos_mv <- mapview(city_sf,zcol="res_fit_mlb", at =my_breaks, cex=2)
residuos_mv
spdep::moran.test(x = cityp$laghurto,  listw = nb)
city <- ciudades[obs]
cityp <- readRDS(paste0("data/",city,".rds"))
cityp <- spTransform(cityp, CRS(crs_utm))
cityp <- cityp %>%
st_as_sf(crs = 4326) %>%
mutate(across(.cols = all_of(delitos),
.fns = t_cub, .names = "cub{.col}")) %>%
mutate(across(.cols = all_of(delitos),
.fns = t_log1p, .names = "log{.col}")) %>%
mutate(across(.cols = all_of(delitos),
.fns = lag_spatial, nb, .names = "lag{.col}")) %>%
as("Spatial")
spdep::moran.test(x = cityp$laghurto,  listw = nb)
# Calcular Local Moran
lmoran = localmoran(cityp$res_fit_mlb, nb)
cityp$res_fit_mlb <- residuals(model_mlb)
cityp$fitted_fit_mlb <- fitted(model_mlb)
cityp$sd_breaks_mlb <- scale(cityp$res_fit_mlb)[,1]
# Calcular Local Moran
lmoran = localmoran(cityp$res_fit_mlb, nb)
cityp$res_scaled = as.numeric(scale(cityp$res_fit_mlb))
cityp$lag_scaled = lag.listw(nb, cityp$res_scaled)
cityp@data = cbind(cityp@data, lmoran = as.data.frame(lmoran)[, 5])
# Umbral de significancia estadistica
pval=0.05
# Definir cuadrantes
cityp[(cityp$res_scaled >= 0 & cityp$lag_scaled >= 0) & (cityp$lmoran <= pval), "clusterM"] = "HH" # plot
cityp[(cityp$res_scaled <= 0 & cityp$lag_scaled <= 0) & (cityp$lmoran <= pval), "clusterM"] = "LL" # plot
cityp[(cityp$res_scaled >= 0 & cityp$lag_scaled <= 0) & (cityp$lmoran <= pval), "clusterM"] = "HL"
cityp[(cityp$res_scaled <= 0 & cityp$lag_scaled >= 0) & (cityp$lmoran <= pval), "clusterM"] = "LH"
cityp[(cityp[, 5] > 0.05), "clusterM"] = "NS"
cityp[, 5]
cityp[(cityp[, "lmoran"] > pval), "clusterM"] = "NS"
cityp[, "lmoran"]
cityp[(cityp[, "lmoran"] > pval), "clusterM"] = "NS"
lmoran[, 5]
cityp[(lmoran[, 5] > pval), "clusterM"] = "NS"
table(cityp$clusterM)
city_sf <- cityp %>% st_as_sf(crs = 32719) %>%
filter(!is.na(clusterM))
residuos_moran <- mapview(city_sf,zcol="clusterM", cex=2 )
residuos_moran
city_sf <- cityp %>% st_as_sf(crs = 32719) %>%
filter(clusterM!=NS)
residuos_moran <- mapview(city_sf,zcol="clusterM", cex=2 )
city_sf <- cityp %>% st_as_sf(crs = 32719) %>%
filter(clusterM != "NS")
residuos_moran <- mapview(city_sf,zcol="clusterM", cex=2 )
residuos_moran
spdep::moran.test(x = cityp$cubhurto,  listw = nb)
# Calcular Local Moran
lmoran = localmoran(cityp$res_fit_sar, nb)
cityp$res_scaled = as.numeric(scale(cityp$res_fit_sar))
# Calcular Local Moran
lmoran = localmoran(cityp$res_fit_sar, nb)
cityp$res_fit_sar <- residuals(model_sar)
cityp$fitted_fit_sar <- fitted(model_sar)
cityp$sd_breaks_sar <- scale(cityp$res_fit_sar)[,1]
spdep::moran.test(x = cityp$cubhurto,  listw = nb)
# moran.plot(x =cityp$laghurto,  listw = nb, labels=as.character(cityp$id))
spdep::moran.test(x = cityp$res_fit_sar,  listw = nb)
# moran.plot(x =cityp$res_fit_mlb,  listw = nb, labels=as.character(cityp$id))
# Calcular Local Moran
lmoran = localmoran(cityp$res_fit_sar, nb)
cityp$res_scaled = as.numeric(scale(cityp$res_fit_sar))
cityp$lag_scaled = lag.listw(nb, cityp$res_scaled)
cityp@data = cbind(cityp@data, lmoran = as.data.frame(lmoran)[, 5])
# Umbral de significancia estadistica
pval=0.05
# Definir cuadrantes
cityp[(cityp$res_scaled >= 0 & cityp$lag_scaled >= 0) & (cityp$lmoran <= pval), "clusterM"] = "HH" # plot
cityp[(cityp$res_scaled <= 0 & cityp$lag_scaled <= 0) & (cityp$lmoran <= pval), "clusterM"] = "LL" # plot
cityp[(cityp$res_scaled >= 0 & cityp$lag_scaled <= 0) & (cityp$lmoran <= pval), "clusterM"] = "HL"
cityp[(cityp$res_scaled <= 0 & cityp$lag_scaled >= 0) & (cityp$lmoran <= pval), "clusterM"] = "LH"
cityp[(lmoran[, 5] > pval), "clusterM"] = "NS"
table(cityp$clusterM)
city_sf <- cityp %>% st_as_sf(crs = 32719) %>%
filter(clusterM != "NS")
residuos_moran <- mapview(city_sf,zcol="clusterM", cex=2 )
residuos_moran
